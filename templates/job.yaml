{{- if .Values.importResources.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: configurator
  namespace: {{ .Values.namespace }}
spec:
  template:
    spec:
      initContainers:
      - name: sensu-backend-test
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ['sh', '-c', 'until wget --no-check-certificate {{ if .Values.SSLCertificates.enabled }}https://{{else}}http://{{end}}{{ .Values.service.name }}.{{ .Values.namespace }}.svc.cluster.local:8080/health ; do echo waiting sensu-backend up ; sleep 10; done;' ]
      containers:
      - name: configurator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
            - sh 
            - -ec 
            - |
                echo "Started: importing resources from file"
                sensuctl configure -n \
                --username "${SENSU_BACKEND_CLUSTER_ADMIN_USERNAME}" \
                --password "${SENSU_BACKEND_CLUSTER_ADMIN_PASSWORD}" \
                --namespace default\
                {{ if .Values.SSLCertificates.enabled }} --trusted-ca-file {{ .Values.SSLCertificates.caCertMountPath }}/sensu-ca.pem --url https://{{ .Values.service.name }}.{{ .Values.namespace }}.svc.cluster.local:8080 {{ else }} --url http://{{ .Values.service.name }}.{{ .Values.namespace }}.svc.cluster.local:8080 {{ end }}
                sensuctl create --file /etc/config/exported.yaml
        env:
        - name: SENSU_BACKEND_CLUSTER_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sensuCredentials }}
              key: sensu_backend_cluster_admin_username
        - name: SENSU_BACKEND_CLUSTER_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sensuCredentials }}
              key: sensu_backend_cluster_admin_password
        volumeMounts:
          - name: exported
            mountPath: /etc/config
        {{- if .Values.SSLCertificates.enabled }}
          - name: {{ .Values.SSLCertificates.caCertName }}
            mountPath: {{ .Values.SSLCertificates.caCertMountPath }}
            readOnly: true
        {{- end }}
      restartPolicy: Never
      volumes:
      - name: exported
        secret:
          secretName: exported
    {{- if .Values.SSLCertificates.enabled }}
      - name: {{ .Values.SSLCertificates.caVolumeName }}
        secret:
          secretName: {{ .Values.SSLCertificates.caVolumeSecretName }}
    {{- end }}
{{- end }}